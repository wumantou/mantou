#logger start
logging.path = loging.log
logging.level.org.springframework.web = info
logging.level.com.mantou = debug
logging.level.net.sf.ehcache = debug
logging.level.org.mybatis.caches = debug
logging.level.com.mantou.server.mapper = trace
#logger end

#datasource start
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/mantou?useUnicode=true&characterEncoding=utf8
spring.datasource.username = root
spring.datasource.password =
#配置最大连接
spring.datasource.maxActive=10
#连接等待超时时间
spring.datasource.maxWait=10000
#配置最小连接
spring.datasource.minIdle=5
#配置初始连接
spring.datasource.initialSize=5
#用来检测是否有效的sql
spring.datasource.validationQuery=SELECT 1
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.testWhileIdle=true
#间隔多久进行检测,关闭空闲连接
spring.datasource.timeBetweenEvictionRunsMillis=18800
#一个连接最小生存时间
spring.datasource.minEvictableIdleTimeMillis=300000
#打开PSCache,并指定每个连接的PSCache大小
spring.datasource.PoolPreparedStatements=true
spring.datasource.maxOpenPreparedStatements=20
#配置sql监控的filter
spring.datasource.filters=stat,wall,log4j
#datasource end

# redis start
spring.redis.database=0
spring.redis.hostName=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.timeout=0
spring.redis.maxTotal=200
spring.redis.maxIdle=100
spring.redis.minIdle=2
spring.redis.maxWaitMillis=100000
spring.redis.testOnBorrow=true
#redis end
#session start
spring.session.store-type=redis
spring.session.redis.namespace=spring:session
#session end